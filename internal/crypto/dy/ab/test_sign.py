
'''
Test script to ensure Python and JavaScript implementations are consistent.
'''
import subprocess
import os
from sign import SignGenerator

def get_js_signature():
    '''Executes the helper JS script via Node.js and returns the signature.'''
    try:
        # Assumes node is in the PATH
        result = subprocess.run(
            ['node', 'js_helper.js'],
            capture_output=True,
            text=True,
            check=True,
            cwd=os.path.dirname(__file__)
        )
        return result.stdout.strip()
    except (subprocess.CalledProcessError, FileNotFoundError) as e:
        print(f"Error executing Node.js helper: {e}")
        print("Please ensure Node.js is installed and in your system's PATH.")
        return None

def test_signature_consistency():
    '''Compares the signatures generated by both implementations.'''
    print("Getting signature from JavaScript implementation...")
    js_signature = get_js_signature()

    if js_signature is None:
        return

    print("Getting signature from Python implementation...")
    
    # Use the same fixed values as in the JS helper
    fixed_timestamp = 1678886400000
    fixed_randoms = [0.123, 0.456, 0.789]
    
    py_signer = SignGenerator(fixed_timestamp=fixed_timestamp, random_values=fixed_randoms)
    
    url_search_params = "device_platform=webapp&aid=6383&channel=channel_pc_web&update_version_code=170400&pc_client_type=1&version_code=170400&version_name=17.4.0&cookie_enabled=true&screen_width=1536&screen_height=864&browser_language=zh-CN&browser_platform=Win32&browser_name=Chrome&browser_version=123.0.0.0&browser_online=true&engine_name=Blink&engine_version=123.0.0.0&os_name=Windows&os_version=10&cpu_core_num=16&device_memory=8&platform=PC&downlink=10&effective_type=4g&round_trip_time=50&webid=7362810250930783783&msToken=VkDUvz1y24CppXSl80iFPr6ez-3FiizcwD7fI1OqBt6IICq9RWG7nCvxKb8IVi55mFd-wnqoNkXGnxHrikQb4PuKob5Q-YhDp5Um215JzlBszkUyiEvR"
    user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36"

    py_signature = py_signer.sign_datail(url_search_params, user_agent)

    print(f"\nJS Signature: {js_signature}")
    print(f"PY Signature: {py_signature}")
    
    assert js_signature == py_signature, "Signatures do not match!"
    
    print("\nâœ… Success! Signatures match.")

if __name__ == "__main__":
    test_signature_consistency()
